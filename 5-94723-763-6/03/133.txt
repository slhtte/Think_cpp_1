//: C03:static_cast.cpp
void func(int) {}

int main() {
int i = 0x7fff; // Максимальное положительное значение = 32767
long l;
float f;
// (1) Типичные автоматические преобразования:
l = i;
f = i;
// Также могут выполняться командами:
l = static_cast<long>(i);
f = static_cast<float>(i);

// (2) Преобразования с потерей информации:
i = l; // Возможна потеря данных
i = f; // Возможна потеря данных
// Означает "Я знаю, что делаю", подавляет предупреждения:
i = static_cast<int>(l);
i = static_cast<int>(f);
char c = static_cast<char>(i);

// (3) Принудительное преобразование void* :
void* vp = &i;
// Опасный старый способ:
float* fp = (float*)vp;
// Новый способ не менее опасен:
fp = static_cast<float*>(vp);

// (4) Неявное приведение типа, обычно выполняемое компилятором:
double d = 0.0;
int x = d; // Автоматическое приведение типа
x = static_cast<int>(d); // Явное приведение типа
func(d); // Автоматическое приведение типа
func(static_cast<int>(d)); // Явное приведение типа
} ///:~