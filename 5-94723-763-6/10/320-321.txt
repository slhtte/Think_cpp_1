//: C10:Initializer.h
// Статическая инициализация
#ifndef INITIALIZER_H
#define INITIALIZER_H
#include <iostream>
extern int x; // Объявления, но не определения
extern int y;

class Initializer {
  static int initCount;
public:
  Initializer() {
    std::cout << "Initializer()" << std::endl;
    // Initialize first time only
    if(initCount++ == 0) {
      std::cout << "performing initialization"
                << std::endl;
      x = 100;
      y = 200;
    }
  }
  ~Initializer() {
    std::cout << "~Initializer()" << std::endl;
    // Clean up last time only
    if(--initCount == 0) {
      std::cout << "performing cleanup" 
                << std::endl;
      // Вся необходимая зачистка
    }
  }
};

// Следующая строка создает один объект в каждом файле,
// включающем Initializer.h, причем этот объект виден
// только в границах файла:
static Initializer init;
#endif // INITIALIZER_H ///:~