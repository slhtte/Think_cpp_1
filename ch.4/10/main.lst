   1              		.file	"main.cpp"
   2              	# GNU C++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) version 5.4.0 20160609 (i686-linux-gnu)
   3              	#	compiled by GNU C version 5.4.0 20160609, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.
   4              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   5              	# options passed:  -imultiarch i386-linux-gnu -D_GNU_SOURCE main.cpp
   6              	# -mtune=generic -march=i686 -auxbase-strip main.s -g -O2 -fverbose-asm
   7              	# -fstack-protector-strong -Wformat -Wformat-security
   8              	# options enabled:  -faggressive-loop-optimizations -falign-labels
   9              	# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg
  10              	# -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  11              	# -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  12              	# -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  13              	# -fchkp-use-static-const-bounds -fchkp-use-wrappers
  14              	# -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  15              	# -fcrossjumping -fcse-follow-jumps -fdefer-pop
  16              	# -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  17              	# -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  18              	# -fexceptions -fexpensive-optimizations -fforward-propagate -ffunction-cse
  19              	# -fgcse -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  20              	# -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  21              	# -findirect-inlining -finline -finline-atomics
  22              	# -finline-functions-called-once -finline-small-functions -fipa-cp
  23              	# -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  24              	# -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
  25              	# -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  26              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  27              	# -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  28              	# -fmath-errno -fmerge-constants -fmerge-debug-strings
  29              	# -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  30              	# -foptimize-strlen -fpartial-inlining -fpcc-struct-return -fpeephole
  31              	# -fpeephole2 -fprefetch-loop-arrays -free -freorder-blocks
  32              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  33              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  34              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  35              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  36              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  37              	# -fsemantic-interposition -fshow-column -fshrink-wrap -fsigned-zeros
  38              	# -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-phiopt
  39              	# -fstack-protector-strong -fstdarg-opt -fstrict-aliasing -fstrict-overflow
  40              	# -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  41              	# -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  42              	# -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
  43              	# -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
  44              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  45              	# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  46              	# -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  47              	# -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  48              	# -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  49              	# -funit-at-a-time -funwind-tables -fvar-tracking
  50              	# -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss -m32
  51              	# -m80387 -m96bit-long-double -malign-stringops
  52              	# -mavx256-split-unaligned-load -mavx256-split-unaligned-store
  53              	# -mfancy-math-387 -mfp-ret-in-387 -mglibc -mieee-fp -mlong-double-80
  54              	# -mno-red-zone -mno-sse4 -mpush-args -msahf -mtls-direct-seg-refs
  55              	# -mvzeroupper
  56              	
  57              		.text
  58              	.Ltext0:
  59              		.section	.text.unlikely,"ax",@progbits
  60              	.LCOLDB0:
  61              		.text
  62              	.LHOTB0:
  63              		.p2align 4,,15
  64              		.globl	_Z6func_cv
  66              	_Z6func_cv:
  67              	.LFB4:
  68              		.cfi_startproc
  69 0000 31C0     		xorl	%eax, %eax	#
  70 0002 C3       		ret
  71              		.cfi_endproc
  72              	.LFE4:
  74              		.section	.text.unlikely
  75              	.LCOLDE0:
  76              		.text
  77              	.LHOTE0:
  78              		.section	.text.unlikely
  79              		.align 2
  80              	.LCOLDB1:
  81              		.text
  82              	.LHOTB1:
  83 0003 90       		.align 2
  84 0004 8DB60000 		.p2align 4,,15
  84      00008DBF 
  84      00000000 
  85              		.section	.text.unlikely
  86              	.Ltext_cold0:
  87              		.text
  88              		.globl	_ZN3Cpp8func_cppEv
  90              	_ZN3Cpp8func_cppEv:
  91              	.LFB1:
  92              		.file 1 "main.cpp"
   1:main.cpp      **** int func_c(void)
   2:main.cpp      **** {
   3:main.cpp      ****     return 0;
   4:main.cpp      **** }
   5:main.cpp      **** 
   6:main.cpp      **** struct Cpp
   7:main.cpp      **** {
   8:main.cpp      ****     void func_cpp();
   9:main.cpp      **** };
  10:main.cpp      **** 
  11:main.cpp      **** void Cpp::func_cpp()
  12:main.cpp      **** {}
  93              		.loc 1 12 0
  94              		.cfi_startproc
  95              	.LVL0:
  96 0010 F3C3     		rep ret
  97              		.cfi_endproc
  98              	.LFE1:
 100              		.section	.text.unlikely
 101              	.LCOLDE1:
 102              		.text
 103              	.LHOTE1:
 104              		.section	.text.unlikely
 105              	.LCOLDB2:
 106              		.section	.text.startup,"ax",@progbits
 107              	.LHOTB2:
 108              		.p2align 4,,15
 109              		.globl	main
 111              	main:
 112              	.LFB2:
  13:main.cpp      **** 
  14:main.cpp      **** int main()
  15:main.cpp      **** {}
 113              		.loc 1 15 0
 114              		.cfi_startproc
 115              		.loc 1 15 0
 116 0000 31C0     		xorl	%eax, %eax	#
 117 0002 C3       		ret
 118              		.cfi_endproc
 119              	.LFE2:
 121              		.section	.text.unlikely
 122              	.LCOLDE2:
 123              		.section	.text.startup
 124              	.LHOTE2:
 125              		.text
 126              	.Letext0:
 127              		.section	.text.unlikely
 128              	.Letext_cold0:
